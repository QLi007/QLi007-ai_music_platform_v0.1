version: '3.8'

services:
  # Infrastructure Services
  discovery-server:
    build: 
      context: .
      dockerfile: discovery-server/Dockerfile
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - aimusic-network

  config-server:
    build:
      context: .
      dockerfile: config-server/Dockerfile
    ports:
      - "8888:8888"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CLOUD_CONFIG_SERVER_GIT_URI=https://github.com/your-org/aimusic-config.git
    depends_on:
      - discovery-server
    networks:
      - aimusic-network

  api-gateway:
    build:
      context: .
      dockerfile: services/api-gateway/Dockerfile
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - discovery-server
      - config-server
    networks:
      - aimusic-network

  # Business Services
  music-generation-service:
    build:
      context: .
      dockerfile: services/music-generation/Dockerfile
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - discovery-server
      - config-server
      - postgres-music
      - kafka
    networks:
      - aimusic-network

  storage-service:
    build:
      context: .
      dockerfile: services/storage/Dockerfile
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    volumes:
      - music-storage:/data
    depends_on:
      - discovery-server
      - config-server
      - minio
    networks:
      - aimusic-network

  user-service:
    build:
      context: .
      dockerfile: services/user/Dockerfile
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - discovery-server
      - config-server
      - postgres-user
      - kafka
    networks:
      - aimusic-network

  quota-service:
    build:
      context: .
      dockerfile: services/quota/Dockerfile
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - discovery-server
      - config-server
      - postgres-quota
      - redis
    networks:
      - aimusic-network

  # Databases
  postgres-music:
    image: postgres:16-alpine
    environment:
      - POSTGRES_DB=aimusic_music
      - POSTGRES_USER=aimusic
      - POSTGRES_PASSWORD=aimusic
    volumes:
      - postgres-music-data:/var/lib/postgresql/data
    networks:
      - aimusic-network

  postgres-user:
    image: postgres:16-alpine
    environment:
      - POSTGRES_DB=aimusic_user
      - POSTGRES_USER=aimusic
      - POSTGRES_PASSWORD=aimusic
    volumes:
      - postgres-user-data:/var/lib/postgresql/data
    networks:
      - aimusic-network

  postgres-quota:
    image: postgres:16-alpine
    environment:
      - POSTGRES_DB=aimusic_quota
      - POSTGRES_USER=aimusic
      - POSTGRES_PASSWORD=aimusic
    volumes:
      - postgres-quota-data:/var/lib/postgresql/data
    networks:
      - aimusic-network

  # Cache & Message Queue
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - aimusic-network

  kafka:
    image: confluentinc/cp-kafka:7.5.1
    ports:
      - "9092:9092"
    environment:
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    volumes:
      - kafka-data:/var/lib/kafka/data
    networks:
      - aimusic-network

  # Storage
  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    volumes:
      - minio-data:/data
    command: server /data --console-address ":9001"
    networks:
      - aimusic-network

  # Monitoring
  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    networks:
      - aimusic-network

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - aimusic-network

  jaeger:
    image: jaegertracing/all-in-one
    ports:
      - "16686:16686"
      - "14250:14250"
    networks:
      - aimusic-network

volumes:
  postgres-music-data:
  postgres-user-data:
  postgres-quota-data:
  redis-data:
  kafka-data:
  minio-data:
  music-storage:
  prometheus-data:
  grafana-data:

networks:
  aimusic-network:
    driver: bridge 